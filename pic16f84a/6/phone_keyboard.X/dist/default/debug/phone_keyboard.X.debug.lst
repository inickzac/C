

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Oct 09 17:53:39 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	dabs	1,0x4E,2
     9  0000                     
    10                           ; Version 2.30
    11                           ; Generated 26/08/2020 GMT
    12                           ; 
    13                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F84A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0088                     	;# 
    60  0089                     	;# 
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  0088                     	;# 
    76  0089                     	;# 
    77  0006                     _PORTBbits	set	6
    78  000B                     _INTCONbits	set	11
    79  0006                     _PORTB	set	6
    80  0005                     _PORTA	set	5
    81  0081                     _OPTION_REGbits	set	129
    82  0086                     _TRISB	set	134
    83  0085                     _TRISA	set	133
    84                           
    85                           	psect	cinit
    86  03FE                     start_initialization:	
    87                           ; #config settings
    88                           
    89  03FE                     __initialization:
    90  03FE                     end_of_initialization:	
    91                           ;End of C runtime variable initialization code
    92                           
    93  03FE                     __end_of__initialization:
    94  03FE  0183               	clrf	3
    95  03FF  2B92               	ljmp	_main	;jump to C main() function
    96                           
    97                           	psect	cstackBANK0
    98  000C                     __pcstackBANK0:
    99  000C                     ?_get_key:
   100  000C                     ??_get_key:	
   101                           ; 1 bytes @ 0x0
   102                           
   103                           
   104                           ; 1 bytes @ 0x0
   105  000C                     	ds	2
   106  000E                     get_key@template:
   107                           
   108                           ; 1 bytes @ 0x2
   109  000E                     	ds	1
   110  000F                     get_key@key:
   111                           
   112                           ; 1 bytes @ 0x3
   113  000F                     	ds	1
   114  0010                     ?_main:
   115  0010                     main@argc:	
   116                           ; 2 bytes @ 0x4
   117                           
   118                           
   119                           ; 2 bytes @ 0x4
   120  0010                     	ds	2
   121  0012                     main@argv:
   122                           
   123                           ; 2 bytes @ 0x6
   124  0012                     	ds	2
   125  0014                     ??_main:
   126                           
   127                           ; 1 bytes @ 0x8
   128  0014                     	ds	1
   129  0015                     main@key:
   130                           
   131                           ; 1 bytes @ 0x9
   132  0015                     	ds	1
   133                           
   134                           	psect	maintext
   135  0392                     __pmaintext:	
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 9 in file "phone_keyboard.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;  argc            2    4[BANK0 ] int 
   144 ;;  argv            2    6[BANK0 ] PTR PTR unsigned char 
   145 ;; Auto vars:     Size  Location     Type
   146 ;;  key             1    9[BANK0 ] unsigned char 
   147 ;; Return value:  Size  Location     Type
   148 ;;                  2    4[BANK0 ] int 
   149 ;; Registers used:
   150 ;;		wreg, status,2, status,0, pclath, cstack
   151 ;; Tracked objects:
   152 ;;		On entry : B00/0
   153 ;;		On exit  : 0/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMMON   BANK0
   156 ;;      Params:         0       4
   157 ;;      Locals:         0       1
   158 ;;      Temps:          0       1
   159 ;;      Totals:         0       6
   160 ;;Total ram usage:        6 bytes
   161 ;; Hardware stack levels required when called:    1
   162 ;; This function calls:
   163 ;;		_get_key
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           
   170                           ;psect for function _main
   171  0392                     _main:
   172  0392                     l720:	
   173                           ;incstack = 0
   174                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   175                           
   176                           
   177                           ;phone_keyboard.c: 11:     TRISA = 0X0;
   178  0392  1683               	bsf	3,5	;RP0=1, select bank1
   179  0393  0185               	clrf	5	;volatile
   180  0394                     l722:
   181                           
   182                           ;phone_keyboard.c: 12:     TRISB = 0b1111;
   183  0394  300F               	movlw	15
   184  0395  0086               	movwf	6	;volatile
   185  0396                     l724:
   186                           
   187                           ;phone_keyboard.c: 13:     PORTA = 0b11111100;
   188  0396  30FC               	movlw	252
   189  0397  1283               	bcf	3,5	;RP0=0, select bank0
   190  0398  0085               	movwf	5	;volatile
   191                           
   192                           ;phone_keyboard.c: 14:     PORTB = 0X0;
   193  0399  0186               	clrf	6	;volatile
   194  039A                     l726:
   195                           
   196                           ;phone_keyboard.c: 15:     INTCONbits.GIE=0;
   197  039A  138B               	bcf	11,7	;volatile
   198  039B                     l728:
   199                           
   200                           ;phone_keyboard.c: 16:     INTCONbits.RBIE=1;
   201  039B  158B               	bsf	11,3	;volatile
   202  039C                     l730:
   203                           
   204                           ;phone_keyboard.c: 17:     OPTION_REGbits.nRBPU=0;
   205  039C  1683               	bsf	3,5	;RP0=1, select bank1
   206  039D  1381               	bcf	1,7	;volatile
   207  039E                     l732:
   208                           
   209                           ;phone_keyboard.c: 20:     {;phone_keyboard.c: 21:         key = get_key();
   210  039E  23AC               	fcall	_get_key
   211  039F  1283               	bcf	3,5	;RP0=0, select bank0
   212  03A0  0094               	movwf	??_main
   213  03A1  0814               	movf	??_main,w
   214  03A2  0095               	movwf	main@key
   215  03A3                     l734:
   216                           
   217                           ;phone_keyboard.c: 22:         if(key!=0xff)
   218  03A3  0A15               	incf	main@key,w
   219  03A4  1903               	btfsc	3,2
   220  03A5  2BA7               	goto	u181
   221  03A6  2BA8               	goto	u180
   222  03A7                     u181:
   223  03A7  2B9E               	goto	l732
   224  03A8                     u180:
   225  03A8                     l736:
   226                           
   227                           ;phone_keyboard.c: 23:         {;phone_keyboard.c: 24:           TRISA = 0X0;
   228  03A8  1683               	bsf	3,5	;RP0=1, select bank1
   229  03A9  0185               	clrf	5	;volatile
   230  03AA  2B9E               	goto	l732
   231  03AB  2800               	ljmp	start
   232  03AC                     __end_of_main:
   233                           
   234                           	psect	text1
   235  03AC                     __ptext1:	
   236 ;; *************** function _get_key *****************
   237 ;; Defined at:
   238 ;;		line 30 in file "phone_keyboard.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;  key             1    3[BANK0 ] unsigned char 
   243 ;;  template        1    2[BANK0 ] unsigned char 
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      unsigned char 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMMON   BANK0
   253 ;;      Params:         0       0
   254 ;;      Locals:         0       2
   255 ;;      Temps:          0       2
   256 ;;      Totals:         0       4
   257 ;;Total ram usage:        4 bytes
   258 ;; Hardware stack levels used:    1
   259 ;; This function calls:
   260 ;;		Nothing
   261 ;; This function is called by:
   262 ;;		_main
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           
   267                           ;psect for function _get_key
   268  03AC                     _get_key:
   269  03AC                     l688:	
   270                           ;incstack = 0
   271                           ; Regs used in _get_key: [wreg+status,2+status,0]
   272                           
   273                           
   274                           ;phone_keyboard.c: 32:     char key, template;;phone_keyboard.c: 33:     key =1; templat
      +                          e=0b11101111;
   275  03AC  1283               	bcf	3,5	;RP0=0, select bank0
   276  03AD  018F               	clrf	get_key@key
   277  03AE  0A8F               	incf	get_key@key,f
   278  03AF                     l690:
   279  03AF  30EF               	movlw	239
   280  03B0  008C               	movwf	??_get_key
   281  03B1  080C               	movf	??_get_key,w
   282  03B2  008E               	movwf	get_key@template
   283                           
   284                           ;phone_keyboard.c: 34:     while(key<13)
   285  03B3  2BEC               	goto	l712
   286  03B4                     l692:
   287                           
   288                           ;phone_keyboard.c: 35:     {;phone_keyboard.c: 36:         PORTB = template;
   289  03B4  080E               	movf	get_key@template,w
   290  03B5  0086               	movwf	6	;volatile
   291  03B6                     l694:
   292                           
   293                           ;phone_keyboard.c: 37:         if(!PORTBbits.RB3)
   294  03B6  1986               	btfsc	6,3	;volatile
   295  03B7  2BB9               	goto	u101
   296  03B8  2BBA               	goto	u100
   297  03B9                     u101:
   298  03B9  2BC2               	goto	l698
   299  03BA                     u100:
   300  03BA  2BBC               	goto	l33
   301  03BB                     l34:
   302                           
   303                           ;phone_keyboard.c: 40:             {;phone_keyboard.c: 41:               _delay((unsigne
      +                          d long)((1)*(8000/4000.0)));
   304  03BB  2BBC               	nop2	;2 cycle nop
   305  03BC                     l33:	
   306                           ;phone_keyboard.c: 42:             }
   307                           
   308                           
   309                           ;phone_keyboard.c: 39:             while(!PORTBbits.RB3)
   310  03BC  1283               	bcf	3,5	;RP0=0, select bank0
   311  03BD  1D86               	btfss	6,3	;volatile
   312  03BE  2BC0               	goto	u111
   313  03BF  2BC1               	goto	u110
   314  03C0                     u111:
   315  03C0  2BBB               	goto	l34
   316  03C1                     u110:
   317  03C1  2BF2               	goto	l714
   318  03C2                     l698:
   319                           
   320                           ;phone_keyboard.c: 45:         key++;
   321  03C2  3001               	movlw	1
   322  03C3  008C               	movwf	??_get_key
   323  03C4  080C               	movf	??_get_key,w
   324  03C5  078F               	addwf	get_key@key,f
   325  03C6                     l700:
   326                           
   327                           ;phone_keyboard.c: 46:         if(!PORTBbits.RB2)
   328  03C6  1906               	btfsc	6,2	;volatile
   329  03C7  2BC9               	goto	u121
   330  03C8  2BCA               	goto	u120
   331  03C9                     u121:
   332  03C9  2BD2               	goto	l704
   333  03CA                     u120:
   334  03CA  2BCC               	goto	l38
   335  03CB                     l39:
   336                           
   337                           ;phone_keyboard.c: 50:             {;phone_keyboard.c: 51:               _delay((unsigne
      +                          d long)((1)*(8000/4000.0)));
   338  03CB  2BCC               	nop2	;2 cycle nop
   339  03CC                     l38:	
   340                           ;phone_keyboard.c: 52:             }
   341                           
   342                           
   343                           ;phone_keyboard.c: 49:             while(!PORTBbits.RB2)
   344  03CC  1283               	bcf	3,5	;RP0=0, select bank0
   345  03CD  1D06               	btfss	6,2	;volatile
   346  03CE  2BD0               	goto	u131
   347  03CF  2BD1               	goto	u130
   348  03D0                     u131:
   349  03D0  2BCB               	goto	l39
   350  03D1                     u130:
   351  03D1  2BF2               	goto	l714
   352  03D2                     l704:
   353                           
   354                           ;phone_keyboard.c: 56:         key++;
   355  03D2  3001               	movlw	1
   356  03D3  008C               	movwf	??_get_key
   357  03D4  080C               	movf	??_get_key,w
   358  03D5  078F               	addwf	get_key@key,f
   359  03D6                     l706:
   360                           
   361                           ;phone_keyboard.c: 57:         if(!PORTBbits.RB1)
   362  03D6  1886               	btfsc	6,1	;volatile
   363  03D7  2BD9               	goto	u141
   364  03D8  2BDA               	goto	u140
   365  03D9                     u141:
   366  03D9  2BE2               	goto	l710
   367  03DA                     u140:
   368  03DA  2BDC               	goto	l42
   369  03DB                     l43:
   370                           
   371                           ;phone_keyboard.c: 60:             {;phone_keyboard.c: 61:               _delay((unsigne
      +                          d long)((1)*(8000/4000.0)));
   372  03DB  2BDC               	nop2	;2 cycle nop
   373  03DC                     l42:	
   374                           ;phone_keyboard.c: 62:             }
   375                           
   376                           
   377                           ;phone_keyboard.c: 59:           while(!PORTBbits.RB1)
   378  03DC  1283               	bcf	3,5	;RP0=0, select bank0
   379  03DD  1C86               	btfss	6,1	;volatile
   380  03DE  2BE0               	goto	u151
   381  03DF  2BE1               	goto	u150
   382  03E0                     u151:
   383  03E0  2BDB               	goto	l43
   384  03E1                     u150:
   385  03E1  2BF2               	goto	l714
   386  03E2                     l710:
   387                           
   388                           ;phone_keyboard.c: 65:         key++;
   389  03E2  3001               	movlw	1
   390  03E3  008C               	movwf	??_get_key
   391  03E4  080C               	movf	??_get_key,w
   392  03E5  078F               	addwf	get_key@key,f
   393                           
   394                           ;phone_keyboard.c: 66:         template=template <<1;
   395  03E6  080E               	movf	get_key@template,w
   396  03E7  008C               	movwf	??_get_key
   397  03E8  070C               	addwf	??_get_key,w
   398  03E9  008D               	movwf	??_get_key+1
   399  03EA  080D               	movf	??_get_key+1,w
   400  03EB  008E               	movwf	get_key@template
   401  03EC                     l712:
   402                           
   403                           ;phone_keyboard.c: 34:     while(key<13)
   404  03EC  300D               	movlw	13
   405  03ED  020F               	subwf	get_key@key,w
   406  03EE  1C03               	skipc
   407  03EF  2BF1               	goto	u161
   408  03F0  2BF2               	goto	u160
   409  03F1                     u161:
   410  03F1  2BB4               	goto	l692
   411  03F2                     u160:
   412  03F2                     l714:
   413                           
   414                           ;phone_keyboard.c: 69:     if(key==13) {key=0xff;}
   415  03F2  300D               	movlw	13
   416  03F3  060F               	xorwf	get_key@key,w
   417  03F4  1D03               	btfss	3,2
   418  03F5  2BF7               	goto	u171
   419  03F6  2BF8               	goto	u170
   420  03F7                     u171:
   421  03F7  2BFC               	goto	l45
   422  03F8                     u170:
   423  03F8                     l716:
   424  03F8  30FF               	movlw	255
   425  03F9  008C               	movwf	??_get_key
   426  03FA  080C               	movf	??_get_key,w
   427  03FB  008F               	movwf	get_key@key
   428  03FC                     l45:
   429                           
   430                           ;phone_keyboard.c: 70:     return key;
   431  03FC  080F               	movf	get_key@key,w
   432  03FD                     l46:
   433  03FD  0008               	return
   434  03FE                     __end_of_get_key:
   435  004E                     btemp	set	78	;btemp
   436  004E                     wtemp0	set	78

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     10      10

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_get_key

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4     141
                                              4 BANK0      6     2      4
                            _get_key
 ---------------------------------------------------------------------------------
 (1) _get_key                                              4     4      0     117
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get_key

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      A       A       3       15.2%
ABS                  0      0       0       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Oct 09 17:53:39 2020

                     l33 03BC                       l42 03DC                       l34 03BB  
                     l43 03DB                       l45 03FC                       l46 03FD  
                     l38 03CC                       l39 03CB                      l700 03C6  
                    l710 03E2                      l704 03D2                      l712 03EC  
                    l720 0392                      l706 03D6                      l714 03F2  
                    l730 039C                      l722 0394                      l716 03F8  
                    l732 039E                      l724 0396                      l734 03A3  
                    l726 039A                      l736 03A8                      l728 039B  
                    l690 03AF                      l692 03B4                      l694 03B6  
                    l688 03AC                      l698 03C2                      u100 03BA  
                    u101 03B9                      u110 03C1                      u111 03C0  
                    u120 03CA                      u121 03C9                      u130 03D1  
                    u131 03D0                      u140 03DA                      u141 03D9  
                    u150 03E1                      u151 03E0                      u160 03F2  
                    u161 03F1                      u170 03F8                      u171 03F7  
                    u180 03A8                      u181 03A7                     _main 0392  
                   btemp 004E                     start 0000                    ?_main 0010  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086          __end_of_get_key 03FE                    status 0003  
                  wtemp0 004E          __initialization 03FE             __end_of_main 03AC  
                 ??_main 0014                ??_get_key 000C  __end_of__initialization 03FE  
         _OPTION_REGbits 0081               __pmaintext 0392          get_key@template 000E  
                __ptext1 03AC                  _get_key 03AC                  main@key 0015  
   end_of_initialization 03FE                _PORTBbits 0006               get_key@key 000F  
    start_initialization 03FE                ___latbits 0000            __pcstackBANK0 000C  
               ?_get_key 000C         __size_of_get_key 0052            __size_of_main 001A  
               main@argc 0010                 main@argv 0012               _INTCONbits 000B  
